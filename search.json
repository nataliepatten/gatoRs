[{"path":[]},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"identifying-synonyms","dir":"Articles","previous_headings":"Data Downloading","what":"Identifying Synonyms","title":"Introduction to gatoRs","text":"Historically, many names may used refer taxa interest. example, specimen representing Galax urceolata (Diapensiaceae) can found scientific name Galax aphylla, despite latter invalidated 50 years ago (see ). Since synonyms common, designed gatoRs retrieve biodiversity records based list names, however user must supply synonym list. many databases available compile synonym lists plant species including: World Flora Online - WFO Plant List TROPICOS World Checklist Vascular Plants USDA PLANTS Database International Plant Names Index World Plants Many R packages developed access databases including: taxize RTNRS WorldFlora Taxonstand U.Taxonstand","code":""},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"download-with-gators","dir":"Articles","previous_headings":"Data Downloading","what":"Download with gatoRs","title":"Introduction to gatoRs","text":"gators_download() can obtain biodiversity records species interest GBIF iDigBio. function innovative searches iDigBio. Unlike spocc::occ(), query iDigBio API using scientific name field, return exact matches. Instead, designed “pseudo-fuzzy match” search fields partial matches supplied scientific names. Additionally, columns returned handpicked aid processing records investigations species distributions (see gators_download()). identify synonyms, create list possible names species interest first name list accepted name (ex. c(\"Galax urceolata\", \"Galax aphylla\")). Note, first name list used identify GBIF species code gbif_match = \"code\". Example:","code":"library(gatoRs) galaxdf <- gators_download(synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"),                  write.file = TRUE,                 filename = \"base_folder/my_file.csv\", # Location to save file - must end in .csv                 gbif.match = \"fuzzy\",                 idigbio.filter = TRUE)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"Data Processing","title":"Introduction to gatoRs","text":"downloaded 7742 observations Galax urceolata example . observations, locality information helpful investigating species distribution.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"identify-records-missing-locality-information","dir":"Articles","previous_headings":"Data Processing","what":"Identify Records Missing Locality Information","title":"Introduction to gatoRs","text":"Locality information can redacted skewed due protect threatened taxa, often locality information provided upon request can identified georeferencing. created functions aid process.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"redacted-records","dir":"Articles","previous_headings":"Data Processing > Identify Records Missing Locality Information","what":"Redacted Records","title":"Introduction to gatoRs","text":"Locality information can redacted skewed due protect threatened taxa; often locality information provided aid research upon request. find data needs manually received institution via permit (removed data set), use needed_records(). receiving data herbaria, manually merge obtained records original data set. Example:","code":"redacted_info <- needed_records(galaxdf)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"records-to-georeference","dir":"Articles","previous_headings":"Data Processing > Identify Records Missing Locality Information","what":"Records to Georeference","title":"Introduction to gatoRs","text":"records may missing latitude longitude values, however locality information can used assign coordinates record georeferencing. find data lacking coordinates containing locality information, use need_to_georeference(). georeference records manually merge obtain records original data set. Example:","code":"to_georeference <- need_to_georeference(galaxdf)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"merging-retained-records","dir":"Articles","previous_headings":"Data Processing > Identify Records Missing Locality Information","what":"Merging Retained Records","title":"Introduction to gatoRs","text":"receiving data herbaria georeferencing, want merge obtained records original data set. Note, following steps work columns equivalent two data sets hope merge. columns equivalent, recommend bcd::bcd_standardize_datasets() Example:","code":"# Avoid duplicates by removing the records you are about to merge dfsub <- remove_missing(galaxdf) # Use gator_merge to merge the main data set with retrieved records dfnew <- gators_merge(dfsub, retrieved_records) # Version control - save a copy prior to any additional processing!! write.csv(dfnew, \"data/merged_data_Galax_urceolata_YYYYMMDD.csv\") ## Version control! # Set gatordf equal to the newly merged data set gatordf <- dfnew"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"occurrence-data-cleaning","dir":"Articles","previous_headings":"Data Processing","what":"Occurrence Data Cleaning","title":"Introduction to gatoRs","text":"walk cleaning function, however also created simple one-step option full_clean(), see .","code":""},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"resolve-taxon-names","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning","what":"Resolve Taxon Names","title":"Introduction to gatoRs","text":"find data containing scientific names corresponding desired species, use taxa_clean(). Use downloaded data first step input, well synonyms list, accepted name, filter option (exact, fuzzy, interactive). Example:","code":"galaxdf <- taxa_clean(df = galaxdf,                         synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"),                        taxa.filter = \"fuzzy\",                        accepted.name = \"Galax urceolata\") # creates a new column with accepted name for easy comparison"},{"path":[]},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"basic-locality-clean","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning > Clean Locality","what":"Basic Locality Clean","title":"Introduction to gatoRs","text":"remove records missing coordinates, impossible coordinates, coordinates (0,0), flagged skewed. skewed records can identified remove_skewed() function row value ‘InformationWitheld’ column. also provide option round provided latitude longitude values specified number decimal places.","code":"galaxdf <- basic_locality_clean(df = galaxdf,                         remove.zero = TRUE, # Records at (0,0) are removed                       precision = TRUE, # latitude and longitude are rounded                        digits = 2, # round to 2 decimal places                       remove.skewed = TRUE)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"find-and-remove-flagged-points","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning > Clean Locality","what":"Find and Remove Flagged Points","title":"Introduction to gatoRs","text":"find records may problematic coordinates, use process_flagged(). function can either automate process finding removing problematic points (interactive = FALSE) allow manual inspection. latter let manually remove points deemed improper viewing points graph. function utilizes CoordinateCleaner::clean_coordinates(). Example: Figure 1: Interactive map appears process_flagged() run. Figure 2: Interactive map appears remove points interactively process_flagged(). Points 1, 3, 5, 6, 7 removed.","code":"galaxdf <- process_flagged(galaxdf, interactive = TRUE)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"remove-duplicate-records","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning","what":"Remove Duplicate Records","title":"Introduction to gatoRs","text":"identify remove (1) specimen duplicates (2) aggregator duplicates based specimens coordinates, occurrenceID, eventDate. leverage date information available, set remove.unparseable = FALSE manually populate year, month, day columns. , also confirm ID (UUID key) unique remove within-aggregator duplicates may accumulate due processing errors. Example:","code":"galaxdf <- remove_duplicates(galaxdf, remove.unparseable = TRUE)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"remove-particular-record-bases","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning","what":"Remove Particular Record Bases","title":"Introduction to gatoRs","text":"Sometimes, certain bases records may want removed data set. , provide basis_clean(). function can used interactively simply supplying df, basis.list value.list basis provided, function select records basisOfRecord value fuzzy match values list provided. Example:","code":"galaxdf <- basis_clean(galaxdf,                         basis.list = c(\"HUMAN_OBSERVATION\", \"PRESERVED_SPECIMEN\",                                        \"MATERIAL_SAMPLE\", \"LIVING_SPECIMEN\",                                         \"PreservedSpecimen\", \"Preserved Specimen\"))"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"spatial-correction","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning","what":"Spatial Correction","title":"Introduction to gatoRs","text":"last processing step spatial correction. Collection efforts can lead clustering points filtering can help reduce clustering. provide functions reduce effects sampling bias using randomization approach retain one point per pixel.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"one-point-per-pixel","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning > Spatial Correction","what":"One Point Per Pixel","title":"Introduction to gatoRs","text":"Maxent retain one point per pixel. make ecological niche analysis comparable, retain one point per pixel. Example:","code":"galaxdf <- one_point_per_pixel(galaxdf,                         resolution = 0.5, # for 30 arc sec raster layers                        precision = TRUE,                         digits = 2)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"spatial-thining","dir":"Articles","previous_headings":"Data Processing > Occurrence Data Cleaning > Spatial Correction","what":"Spatial thining","title":"Introduction to gatoRs","text":"thin points utilizing spThin::thin(). step reduces effects sampling bias using randomization approach. Step 1: minimum distance ? first calculate minimum nearest neighbor distance km: Example: current minimum distance 2.22 km. Based literature, find 2 meters (0.002 km) distance enough collect unique genets, need thin points. Step 2: Thin occurrence records using spThin gatoRs. need thin records, great function ! Example:","code":"library(fields) nnDm <- rdist.earth(as.matrix(data.frame(lon = df$longitude, lat = df$latitude)), miles = FALSE, R = NULL) nnDmin <- do.call(rbind, lapply(1:5, function(i) sort(nnDm[,i])[2])) min(nnDmin) df <- thin_points(df,                      distance = 0.002, # in km                      reps = 100)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"full-clean","dir":"Articles","previous_headings":"Data Processing","what":"Full Clean","title":"Introduction to gatoRs","text":"Finally, instead step--step cleaning, created single function streamline process. Example:","code":"## Read raw csv rawdf <- read.csv(\"base_folder/my_file.csv\") ## Set your full clean preferences equal to the above df_quick_clean <- full_clean(rawdf,                             synonyms.list =  c(\"Galax urceolata\", \"Galax aphylla\"),                              remove.NA.occ.id = FALSE,                             remove.NA.date = FALSE,                             accepted.name =  \"Galax urceolata\",                             remove.zero = TRUE,                             precision = TRUE,                             digits = 2,                             remove.skewed = TRUE,                             basis.list = c(\"HUMAN_OBSERVATION\", \"PRESERVED_SPECIMEN\",                                              \"MATERIAL_SAMPLE\",  \"LIVING_SPECIMEN\",                                              \"PreservedSpecimen\", \"Preserved Specimen\"),                             remove.flagged = TRUE,                             thin.points = TRUE,                             distance = 0.002,                             reps = 100,                             one.point.per.pixel = TRUE)"},{"path":[]},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"prepared-data-for-maxent","dir":"Articles","previous_headings":"Downstream Data Proccessing","what":"Prepared data for MAXENT","title":"Introduction to gatoRs","text":"data_chomp() function subsets data set include columns needed Maxent: user-provided accepted name, latitude, longitude. Example:","code":"maxent_ready <- data_chomp(df,                             accepted.name = \"Galax urceolata\" ) write.csv(maxent_ready, \"data/formaxent_Galax_urceolata_YYYYMMDD.csv\",            row.names = FALSE)"},{"path":"https://nataliepatten.github.io/gatoRs/articles/Introduction.html","id":"prepared-data-for-publication","dir":"Articles","previous_headings":"Downstream Data Proccessing","what":"Prepared data for publication","title":"Introduction to gatoRs","text":"aid data preparation publication comply GBIF’s data use agreement, citation_bellow() function return citation information records list (function name based gators bellowing). Additionally, remove_redacted() remove records aggregator value equal iDigBio GBIF. aggregator column can used indicate redacted records retrieved thus used filter non-sharable records. Example:","code":"## Retrieve GBIF citations GBIF_citations <- citation_bellow(df) ## Warning, this is very slow write.csv(GBIF_citations, \"data/GBIF_citations_Galax_urceolata_YYYYMMDD.csv\",            row.names = FALSE)  # Remove redacted records ### If redacted records were retrieved, make sure to remove them before publication! Remove redacted records! df_pub_ready <- remove_redacted(df) write.csv(df_pub_ready, \"data/publication_ready_Galax_urceolata_YYYYMMDD.csv\",            row.names = FALSE)"},{"path":"https://nataliepatten.github.io/gatoRs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Natalie N. Patten. Author, maintainer. Michelle L. Gaynor. Author. Douglas E. Soltis. Contributor. Pamela S. Soltis. Contributor.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Patten N, Gaynor M (2023). gatoRs: Geographic Taxonomic Occurrence R-Based Scrubbing. https://nataliepatten.github.io/gatoRs/, https://github.com/nataliepatten/gatoRs.","code":"@Manual{,   title = {gatoRs: Geographic and Taxonomic Occurrence R-Based Scrubbing},   author = {Natalie N. Patten and Michelle L. Gaynor},   year = {2023},   note = {https://nataliepatten.github.io/gatoRs/, https://github.com/nataliepatten/gatoRs}, }"},{"path":"https://nataliepatten.github.io/gatoRs/index.html","id":"gators-geographic-and-taxonomic-occurrence-r-based-scrubbing","dir":"","previous_headings":"","what":"Geographic and Taxonomic Occurrence R-Based Scrubbing","title":"Geographic and Taxonomic Occurrence R-Based Scrubbing","text":"Natalie N. Patten, Michelle L. Gaynor, Douglas E. Soltis, Pamela S. Soltis","code":""},{"path":"https://nataliepatten.github.io/gatoRs/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Geographic and Taxonomic Occurrence R-Based Scrubbing","text":"gatoRs (Geographic Taxonomic Occurrence R-Based Scrubbing) provides users tools downloading processing biodiversity data. Click information.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geographic and Taxonomic Occurrence R-Based Scrubbing","text":"","code":"install.packages(\"devtools\") devtools::install_github(\"nataliepatten/gatoRs\")"},{"path":"https://nataliepatten.github.io/gatoRs/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Geographic and Taxonomic Occurrence R-Based Scrubbing","text":"package aims streamline downloading processing biodiversity specimen data. quick example download clean package. Step 1: Download Step 2: Clean - recommend jumping full clean function. See extended introduction !","code":"library(gatoRs) galaxdf <- gators_download(synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"),                  write.file = FALSE,                 gbif.match = \"fuzzy\",                 idigbio.filter = TRUE) clean_data <- full_clean(galaxdf,                          synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"),                           digits = 3,                          basis.list = c(\"Preserved Specimen\",\"Physical specimen\"),                           accepted.name = \"Galax urceolata\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/basic_locality_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","title":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","text":"basic_locality_clean() function cleans locality removing missing impossible coordinates correcting precision. function requires columns named 'latitude' 'longitude'. columns type 'numeric'.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basic_locality_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","text":"","code":"basic_locality_clean(   df,   latitude = \"latitude\",   longitude = \"longitude\",   remove.zero = TRUE,   precision = TRUE,   digits = 2,   remove.skewed = TRUE,   info.withheld = \"informationWithheld\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/basic_locality_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","text":"df Data frame occurrence records returned gators_download(). latitude Default = \"latitude\". name latitude column data frame. longitude Default = \"longitude\". name longitude column data frame. remove.zero Default = TRUE. Indicates points (0.00, 0.00) removed. precision Default = TRUE. Indicates coordinates rounded match coordinate uncertainty. digits Default = 2. Indicates digits round coordinates precision = TRUE. remove.skewed Default = TRUE. Utilizes remove_skewed() function remove skewed coordinate values. info.withheld Default = \"informationWithheld\". name information withheld column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basic_locality_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","text":"Return data frame specimen removed missing improper coordinate values.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basic_locality_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","text":"function removes records missing coordinates, impossible coordinates, coordinates (0,0), flagged skewed. skewed records identified remove_skewed() function identifies rows ‘InformationWitheld’ column includes string \"Coordinate uncertainty increased\". also provide option round provided latitude longitude values specified number decimal places. function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basic_locality_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locality Cleaning - Remove missing and improbable coordinates — basic_locality_clean","text":"","code":"cleaned_data <- basic_locality_clean(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/basis_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Basis Cleaning - Removes records with certain record basis — basis_clean","title":"Basis Cleaning - Removes records with certain record basis — basis_clean","text":"basis_clean() function removes records based basisOfRecord column.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basis_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basis Cleaning - Removes records with certain record basis — basis_clean","text":"","code":"basis_clean(df, basis.list = NA, basis.of.record = \"basisOfRecord\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/basis_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basis Cleaning - Removes records with certain record basis — basis_clean","text":"df Data frame occurrence records returned gators_download(). basis.list list basis keep. list supplied, filter interactive users must respond function. basis..record Default = \"basisOfRecord\". name basis record column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basis_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basis Cleaning - Removes records with certain record basis — basis_clean","text":"Returns data frame records desired record basis.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basis_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basis Cleaning - Removes records with certain record basis — basis_clean","text":"interactive method, function print unique basisOfRecord values current data set ask user respond console prompts regarding records, , removed based basisOfRecord. function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/basis_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basis Cleaning - Removes records with certain record basis — basis_clean","text":"","code":"cleaned_data <- basis_clean(data, basis.list = c(\"Preserved Specimen\",\"Physical specimen\"))"},{"path":"https://nataliepatten.github.io/gatoRs/reference/citation_bellow.html","id":null,"dir":"Reference","previous_headings":"","what":"Cite Data - Get GBIF citations — citation_bellow","title":"Cite Data - Get GBIF citations — citation_bellow","text":"citation_bellow function retrieves returns citation information data provided GBIF data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/citation_bellow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cite Data - Get GBIF citations — citation_bellow","text":"","code":"citation_bellow(df, id = \"ID\", aggregator = \"aggregator\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/citation_bellow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cite Data - Get GBIF citations — citation_bellow","text":"df Data frame occurrence records returned gators_download(). id Default = \"ID\". name id column data frame, contains unique IDs defined GBIF (keys) iDigBio (UUID). aggregator Default = \"aggregator\". name column data frame identifies aggregator provided record. equal iDigBio GBIF.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/citation_bellow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cite Data - Get GBIF citations — citation_bellow","text":"Returns list citation information GBIF data downloaded.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/citation_bellow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cite Data - Get GBIF citations — citation_bellow","text":"function requires rgbif package.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/citation_bellow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cite Data - Get GBIF citations — citation_bellow","text":"","code":"# \\donttest{ citations <- citation_bellow(data) # }"},{"path":"https://nataliepatten.github.io/gatoRs/reference/correct_class.html","id":null,"dir":"Reference","previous_headings":"","what":"gatoRs Download - Correct classes of data frame columns — correct_class","title":"gatoRs Download - Correct classes of data frame columns — correct_class","text":"correct_class() function corrects classes column data frame queried species. function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/correct_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gatoRs Download - Correct classes of data frame columns — correct_class","text":"","code":"correct_class(   df,   scientific.name = \"scientificName\",   genus = \"genus\",   species = \"specificEpithet\",   infraspecific.epithet = \"infraspecificEpithet\",   id = \"ID\",   occ.id = \"occurrenceID\",   basis.of.record = \"basisOfRecord\",   event.date = \"eventDate\",   year = \"year\",   month = \"month\",   day = \"day\",   inst.code = \"institutionCode\",   recorded.by = \"recordedBy\",   country = \"country\",   county = \"county\",   state = \"stateProvince\",   locality = \"locality\",   latitude = \"latitude\",   longitude = \"longitude\",   coord.uncertainty = \"coordinateUncertaintyInMeters\",   info.withheld = \"informationWithheld\",   habitat = \"habitat\",   aggregator = \"aggregator\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/correct_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gatoRs Download - Correct classes of data frame columns — correct_class","text":"df Data frame returned gator_download(). scientific.name Default = \"scientificName\". name scientificName column data frame. genus Default = \"genus\". name genus column data frame. species Default = \"specificEpithet\". name specificEpithet column data frame. infraspecific.epithet Default = \"infraspecificEpithet\". name infraspecificEpithet column data frame. id Default = \"ID\". name id column data frame, contains unique IDs defined GBIF (keys) iDigBio (UUID). occ.id Default = \"occurrenceID\". name occurrenceID column data frame. basis..record Default = \"basisOfRecord\". name basis record column data frame. event.date Default = \"eventDate\". name event date column data frame. year Default = \"year\". name year column data frame. month Default = \"month\". name month column data frame. day Default = \"day\". name day column data frame. inst.code Default = \"institutionCode\". name institution code column data frame. recorded.Default = \"recordedBy\". recordedBy column data frame. country Default = \"country\". name country column data frame. county Default = \"county\". name county column data frame. state Default = \"stateProvince\". name state/province column data frame. locality Default = \"locality\". name locality column data frame. latitude Default = \"latitude\". name latitude column data frame. longitude Default = \"longitude\". name longitude column data frame. coord.uncertainty Default = \"coordinateUncertaintyInMeters\". name coordinate uncertainty column data frame. info.withheld Default = \"informationWithheld\". name information withheld column data frame. habitat Default = \"habitat\". name habitat column data frame. aggregator Default = \"aggregator\". name column data frame identifies aggregator provided record. equal iDigBio GBIF.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/correct_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gatoRs Download - Correct classes of data frame columns — correct_class","text":"Returns data frame corrected classes column.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/correct_class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gatoRs Download - Correct classes of data frame columns — correct_class","text":"\"aggregator\", \"infraspecific.epithet\", \"recorded.\" columns skipped exist. function requires dplyr package.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloaded data from gators_download() for Galax urceolata with default settings and 'limit' set to 5:\ndata <- gators_download(synonyms.list = c(","title":"Downloaded data from gators_download() for Galax urceolata with default settings and 'limit' set to 5:\ndata <- gators_download(synonyms.list = c(","text":"Downloaded data gators_download() Galax urceolata default settings 'limit' set 5: data <- gators_download(synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"), limit = 5)","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloaded data from gators_download() for Galax urceolata with default settings and 'limit' set to 5:\ndata <- gators_download(synonyms.list = c(","text":"","code":"data"},{"path":"https://nataliepatten.github.io/gatoRs/reference/data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Downloaded data from gators_download() for Galax urceolata with default settings and 'limit' set to 5:\ndata <- gators_download(synonyms.list = c(","text":"data frame 17 rows 23 columns","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data_chomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Data - Get species, longitude, and latitude columns — data_chomp","title":"Subset Data - Get species, longitude, and latitude columns — data_chomp","text":"data_chomp() function \"chomps\" (subsets) data frame occurrence records contain following columns: \"species\", \"longitude\", \"latitude\". using function data ready use Maxent, example.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data_chomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Data - Get species, longitude, and latitude columns — data_chomp","text":"","code":"data_chomp(   df,   accepted.name = NA,   longitude = \"longitude\",   latitude = \"latitude\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/data_chomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Data - Get species, longitude, and latitude columns — data_chomp","text":"df Data frame occurrence records returned gators_download(). accepted.name accepted species name records. longitude Default = \"longitude\". name longitude column data frame. latitude Default = \"latitude\". name latitude column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data_chomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Data - Get species, longitude, and latitude columns — data_chomp","text":"Returns data frame subset columns ready downstream applications Maxent.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data_chomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset Data - Get species, longitude, and latitude columns — data_chomp","text":"function requires package dplyr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/data_chomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Data - Get species, longitude, and latitude columns — data_chomp","text":"","code":"chomped_data <- data_chomp(data, accepted.name = \"Galax urceolata\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/filter_fix_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","title":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","text":"filter_fix_names() function filters data frame relevant results, based scientific name given. downloaded results iDigBio might contain occurrences species \"notes\" \"locality\" strings mentioning desired species. retain scientificName column found fuzzy match value user-provided list containing scientific name applicable synonym Hence, function looks relevant results actually occurrences desired species.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/filter_fix_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","text":"","code":"filter_fix_names(   df,   synonyms.list,   filter = \"fuzzy\",   scientific.name = \"scientificName\",   accepted.name = NA )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/filter_fix_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","text":"df Data frame name column fixed. synonyms.list list synonyms species. filter Default = \"fuzzy\". Indicates type filter used--either \"exact\" \"fuzzy\". scientific.name Default = \"scientificName\". name scientificName column data frame. accepted.name accepted scientific name species. provided, additional column added data frame accepted name manual comparison.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/filter_fix_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","text":"Returns data frame filtered results.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/filter_fix_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/filter_fix_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in gators_download() -  Filter iDigBio results by scientific name — filter_fix_names","text":"","code":"cleaned_data <- filter_fix_names(data, c(\"Galax urceolata\", \"Galax aphylla\"), filter = \"exact\") cleaned_data <- filter_fix_names(data, c(\"Galax urceolata\", \"Galax aphylla\"), accepted.name = \"Galax urceolata\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/fixAfterPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix taxonomic capitalization of a species name when there are periods involved. — fixAfterPeriod","title":"Fix taxonomic capitalization of a species name when there are periods involved. — fixAfterPeriod","text":"fixAfterPeriod() function fixes taxonomic capitalization string periods species name.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fixAfterPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix taxonomic capitalization of a species name when there are periods involved. — fixAfterPeriod","text":"","code":"fixAfterPeriod(substring)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/fixAfterPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix taxonomic capitalization of a species name when there are periods involved. — fixAfterPeriod","text":"substring substring name column data frame fixed.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fixAfterPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix taxonomic capitalization of a species name when there are periods involved. — fixAfterPeriod","text":"Returns substring fixed capitalization.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fixAfterPeriod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix taxonomic capitalization of a species name when there are periods involved. — fixAfterPeriod","text":"Requires package stringr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","title":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","text":"fix_columns() function fills taxonomic name columns based available information data set. example, row name provided scientificName column, information used generate respective genus, specificEpithet, infraspecificEpithet columns row.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","text":"","code":"fix_columns(   df,   scientific.name = \"scientificName\",   genus = \"genus\",   species = \"specificEpithet\",   infraspecific.epithet = \"infraspecificEpithet\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","text":"df Data frame occurrence records. scientific.name Default = \"scientificName\". name scientificName column data frame. genus Default = \"genus\". name genus column data frame. species Default = \"specificEpithet\". name specificEpithet column data frame. infraspecific.epithet Default = \"infraspecificEpithet\". name infraspecificEpithet column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","text":"Returns original data frame specified columns.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","text":"function requires package stringr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in gators_download() - Fill out taxonomic name columns — fix_columns","text":"","code":"fixed_data <- fix_columns(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","title":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","text":"fix_names() function fixes capitalization species names data frame provided align accepted capitalization standards.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","text":"","code":"fix_names(df, scientific.name = \"scientificName\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","text":"df Data frame name column fixed. scientific.name Default = \"scientificName\". name scientificName column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","text":"Returns df fixed capitalization name column.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","text":"function uses fixAfterPeriod() function. function requires package stringr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/fix_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in gators_download() - Fix taxonomic name capitalization — fix_names","text":"","code":"fixed_data <- fix_names(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/full_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Full Cleaning - Wrapper function to speed clean — full_clean","title":"Full Cleaning - Wrapper function to speed clean — full_clean","text":"full_clean() function performs automated cleaning steps, including options : removing duplicate data points, checking locality precision, removing points skewed coordinates, removing plain zero records, removing records based basis record, spatially thinning collection points. function also provides option interactively inspect remove types basis record.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/full_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full Cleaning - Wrapper function to speed clean — full_clean","text":"","code":"full_clean(   df,   synonyms.list,   event.date = \"eventDate\",   year = \"year\",   month = \"month\",   day = \"day\",   occ.id = \"occurrenceID\",   remove.NA.occ.id = FALSE,   remove.NA.date = FALSE,   aggregator = \"aggregator\",   id = \"ID\",   taxa.filter = \"fuzzy\",   scientific.name = \"scientificName\",   accepted.name = NA,   remove.zero = TRUE,   precision = TRUE,   digits = 2,   remove.skewed = TRUE,   basis.list = NA,   basis.of.record = \"basisOfRecord\",   latitude = \"latitude\",   longitude = \"longitude\",   remove.flagged = TRUE,   thin.points = TRUE,   distance = 5,   reps = 100,   one.point.per.pixel = TRUE,   raster = NA,   resolution = 0.5,   remove.duplicates = TRUE )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/full_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Full Cleaning - Wrapper function to speed clean — full_clean","text":"df Data frame occurrence records. synonyms.list list synonyms species. event.date Default = \"eventDate\". name event date column data frame. year Default = \"year\". name year column data frame. month Default = \"month\". name month column data frame. day Default = \"day\". name day column data frame. occ.id Default = \"occurrenceID\". name occurrenceID column data frame. remove.NA.occ.id Default = FALSE. remove records missing occurrence IDs set TRUE. remove.NA.date Default = FALSE. remove records missing event dates set TRUE. aggregator Default = \"aggregator\". name column data frame identifies aggregator provided record. equal iDigBio GBIF. id Default = \"ID\". name id column data frame, contains unique IDs defined GBIF (keys) iDigBio (UUID). taxa.filter type filter used--either \"exact\", \"fuzzy\", \"interactive\". scientific.name Default = \"scientificName\". name scientificName column data frame. accepted.name accepted scientific name species. provided, additional column added data frame accepted name manual comparison. remove.zero Default = TRUE. Indicates points (0.00, 0.00) removed. precision Default = TRUE. Indicates coordinates rounded match coordinate uncertainty. digits Default = 2. Indicates digits round coordinates precision = TRUE. remove.skewed Default = TRUE. Utilizes remove_skewed() function remove skewed coordinate values. basis.list list basis keep. list supplied, filter occur. basis..record Default = \"basisOfRecord\". name basis record column data frame. latitude Default = \"latitude\". name latitude column data frame. longitude Default = \"longitude\". name longitude column data frame. remove.flagged Default = TRUE. option remove points problematic locality information. thin.points Default = TRUE. option spatially thin occurrence records. distance Default = 5. Distance km separate records. reps Default = 100. Number times perform thinning algorithm. one.point.per.pixel Default = TRUE. option retain one point per pixel. raster Raster object used ecological niche comparisons. resolution Default = 0.5. Options - 0.5, 2.5, 5, 10 (min degree). 0.5 min degree equal 30 arc sec. remove.duplicates Default = TRUE. option remove duplicate points.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/full_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Full Cleaning - Wrapper function to speed clean — full_clean","text":"df data frame cleaned data.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/full_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Full Cleaning - Wrapper function to speed clean — full_clean","text":"function entirely automated thus take advantage interactive options provided individual cleaning functions. Using wrapper recommended data processing require interactive/manual cleaning inspection. cleaning steps, except taxonomic harmonization, can bypassed setting associated input variables FALSE. function requires packages dplyr, magrittr, raster.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/full_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Full Cleaning - Wrapper function to speed clean — full_clean","text":"","code":"cleaned_data <- full_clean(data, synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"), digits = 3, basis.list = c(\"Preserved Specimen\",\"Physical specimen\"), accepted.name = \"Galax urceolata\", remove.flagged = FALSE)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download - Download specimen data from both iDigBio and GBIF — gators_download","title":"Download - Download specimen data from both iDigBio and GBIF — gators_download","text":"gators_download() function downloads data GBIF iDigBio desired species.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download - Download specimen data from both iDigBio and GBIF — gators_download","text":"","code":"gators_download(   synonyms.list,   write.file = FALSE,   filename = NA,   gbif.match = \"fuzzy\",   gbif.prov = FALSE,   idigbio.filter = TRUE,   limit = 1e+05 )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download - Download specimen data from both iDigBio and GBIF — gators_download","text":"synonyms.list list scientific names including accepted scientific name synonyms desired species. example, synonyms.list = c(\"Asclepias curtissii\",\"Asclepias aceratoides\", \"Asclepias arenicola\", \"Oxypteryx arenicola\", \"Oxypteryx curtissii\"). parameter required. write.file parameter choose whether produce .csv file containing search results. parameter required assigned FALSE default. filename path file name retrieved data. Note parameter include \".csv\" extension well. example, filename = \"base_folder/other_folder/my_file.csv\". file path can entered either relative current working directory (example: \"../my_file.csv\") full path. parameter required write.file = TRUE. gbif.match parameter select either search fuzzy matching scientific name search species code. example, gbif.match = \"fuzzy\" search fuzzy match gbif.match = \"code\" search code. parameter required assigned \"fuzzy\" default. gbif.prov parameter obtain provider/verbatim columns GBIF. parameter optional assigned FALSE default. idigbio.filter parameter remove less relevant search results iDigBio. Based search input, results may include data points different species mention desired species locality information, example. Choosing idigbio.filter = TRUE return data frame rows name column fuzzy matches name synonym list. parameter required assigned TRUE default. limit Default = 100,000 (maximum). Set limit number records requested element synonyms.list aggregator.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download - Download specimen data from both iDigBio and GBIF — gators_download","text":"Returns data frame writes csv file specified input. csv file contain search results desired species GBIF iDigBio databases. columns follows: scientificName genus specificEpithet infraspecificEpithet ID (contains unique IDs defined GBIF iDigBio) occurrenceID basisOfRecord eventDate year month day institutionCode recordedBy informationWithheld country county stateProvince locality latitude longitude coordinateUncertaintyInMeters habitat aggregator (either GBIF iDigBio)","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download - Download specimen data from both iDigBio and GBIF — gators_download","text":"gators_download() can obtain biodiversity records species interest GBIF iDigBio. function innovative searches iDigBio. Unlike spocc::occ(), query iDigBio API using scientific name field, return exact matches. Instead, designed “pseudo-fuzzy match” search fields partial matches supplied scientific names. function uses get_idigbio(), get_gbif(), fix_columns(), fix_names(), filter_fix_names() functions. function requires packages magrittr, rgbif, dplyr, ridigbio, stringr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download - Download specimen data from both iDigBio and GBIF — gators_download","text":"","code":"df <- gators_download(synonyms.list = c(\"Galax urceolata\", \"Galax aphylla\"), limit = 10) df <- gators_download(synonyms.list = \"Galax urceolata\", gbif.match = \"code\", idigbio.filter = FALSE, limit = 10) #> Warning: iDigBio search will return all records where any column has a matching string to the provided scientific names."},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","title":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","text":"gators_merge() function combines two data sets identical column names returns single data set.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","text":"","code":"gators_merge(df1, df2)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","text":"df1 data frame downloaded gators_download() prepared using remove_missing(). df2 data frame columns df1, observations generated georeferencing data requests.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","text":"combined data set.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_merge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","text":"Prior combining data set georeferenced retrieved data, please use remove_missing() function limit duplicate records. function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/gators_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Retained Data - Combined original data set with georeferenced or retained records. — gators_merge","text":"","code":"removed_missing <- remove_missing(data) needs_geo <- need_to_georeference(data) # fill in manually georeferenced data into needs_geo... merged_data <- gators_merge(removed_missing, needs_geo) needs_data <- needed_records(data) # fill in missing information with a data request... merged_data <- gators_merge(merged_data, needs_data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_gbif.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","title":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","text":"get_gbif() function queries Global Biodiversity Information Facility (GBIF) desired species. Limited 100,000 record downloads.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_gbif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","text":"","code":"get_gbif(synonyms.list, gbif.match = \"fuzzy\", gbif.prov = FALSE, limit = 1e+05)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_gbif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","text":"synonyms.list list affiliated names query. gbif.match Default = \"fuzzy\". Either \"fuzzy\" fuzzy matching name \"code\" search species code. gbif.prov Default = FALSE. parameter obtain provider/verbatim columns GBIF. limit Default = 100,000 (maximum). Set limit number records requested element synonyms.list.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_gbif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","text":"Returns data frame desired columns GBIF.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_gbif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","text":"function uses correct_class() function. function requires packages rgbif, magrittr, dplyr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_gbif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in gators_download() - Download data from the Global Biodiversity Information Facility — get_gbif","text":"","code":"df <- get_gbif(c(\"Galax urceolata\", \"Galax aphylla\"), limit = 5) df <- get_gbif(c(\"Galax urceolata\", \"Galax aphylla\"), gbif.match = \"code\", limit = 5) df <- get_gbif(c(\"Galax urceolata\", \"Galax aphylla\"), gbif.prov = TRUE, limit = 5)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_idigbio.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","title":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","text":"get_idigbio() function queries iDigBio desired species. Limited 100,000 record downloads.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_idigbio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","text":"","code":"get_idigbio(synonyms.list, limit = 1e+05)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_idigbio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","text":"synonyms.list list affiliated names query. limit Default = 100,000 (maximum). Set limit number records requested element synonyms.list.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_idigbio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","text":"data frame desired columns iDigBio.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_idigbio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","text":"function uses correct_class() function. function requires packages ridigbio, magrittr, dplyr.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/get_idigbio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in gators_download() - Download data from Integrated Digitized Biocollections — get_idigbio","text":"","code":"df <- get_idigbio(c(\"Galax urceolata\", \"Galax aphylla\"), limit = 100)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/matchColClasses.html","id":null,"dir":"Reference","previous_headings":"","what":"matchColClasses — matchColClasses","title":"matchColClasses — matchColClasses","text":"function allows match column classes two data frames. function requires package base. function require user input. Source: https://stackoverflow.com/questions/49215193/r-error-cant-join----incompatible-types","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/matchColClasses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matchColClasses — matchColClasses","text":"","code":"matchColClasses(df1, df2)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/matchColClasses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"matchColClasses — matchColClasses","text":"df1 data frame df2 data frame","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/matchColClasses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"matchColClasses — matchColClasses","text":"df2 corrected column classes","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/need_to_georeference.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","title":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","text":"need_to_georeference() function allows find records missing coordinates contain locality information. records can manually georeferenced.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/need_to_georeference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","text":"","code":"need_to_georeference(   df,   longitude = \"longitude\",   latitude = \"latitude\",   locality = \"locality\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/need_to_georeference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","text":"df data frame downloaded gators_download(). longitude Default = \"longitude\". name longitude column data frame. latitude Default = \"latitude\". name latitude column data frame. locality Default = \"locality\". name locality column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/need_to_georeference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","text":"Returns data frame points need georeferenced. information data frame, see gators_download().","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/need_to_georeference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/need_to_georeference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Missing Information - Find records which lack coordinate information — need_to_georeference","text":"","code":"need_coords <- need_to_georeference(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/needed_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Missing Information - Find records with redacted or missing data — needed_records","title":"Identify Missing Information - Find records with redacted or missing data — needed_records","text":"needed_records() function identifies records flags, therefore withheld. indicates information withheld records due endangered species status, example. Accessing information may require permit. , records can removed data set remove_redacted().","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/needed_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Missing Information - Find records with redacted or missing data — needed_records","text":"","code":"needed_records(df, info.withheld = \"informationWithheld\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/needed_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Missing Information - Find records with redacted or missing data — needed_records","text":"df data frame downloaded gators_download(). info.withheld Default = \"informationWithheld\". name information withheld column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/needed_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Missing Information - Find records with redacted or missing data — needed_records","text":"data frame records locality flagged.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/needed_records.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Missing Information - Find records with redacted or missing data — needed_records","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/needed_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Missing Information - Find records with redacted or missing data — needed_records","text":"","code":"need_info <- needed_records(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/one_point_per_pixel.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Correction - One point per pixel — one_point_per_pixel","title":"Spatial Correction - One point per pixel — one_point_per_pixel","text":"one_point_per_pixel function retains one point per raster pixel. function useful creating present-absent models.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/one_point_per_pixel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Correction - One point per pixel — one_point_per_pixel","text":"","code":"one_point_per_pixel(   df,   raster = NA,   resolution = 0.5,   precision = TRUE,   digits = 2,   longitude = \"longitude\",   latitude = \"latitude\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/one_point_per_pixel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Correction - One point per pixel — one_point_per_pixel","text":"df Data frame occurrence records. raster Raster object used ecological niche comparisons. resolution Default = 0.5. Options - 0.5, 2.5, 5, 10 (min degree). 0.5 min degree equal 30 arc sec. precision Default = TRUE. Indicates coordinates rounded match coordinate uncertainty. digits Default = 2. Indicates digits round coordinates precision = TRUE. longitude Default = \"longitude\". name longitude column data frame. latitude Default = \"latitude\". name latitude column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/one_point_per_pixel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Correction - One point per pixel — one_point_per_pixel","text":"df data frame one point per pixel.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/one_point_per_pixel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial Correction - One point per pixel — one_point_per_pixel","text":"function requires package raster spatstat.geom.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/one_point_per_pixel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Correction - One point per pixel — one_point_per_pixel","text":"","code":"ready_data <- one_point_per_pixel(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://nataliepatten.github.io/gatoRs/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/process_flagged.html","id":null,"dir":"Reference","previous_headings":"","what":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","title":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","text":"process_flagged() function allows find map possible problematic points manually inspect remove points, desired. running function interactively can hover point see record's scientific name, click point see record's coordinates.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/process_flagged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","text":"","code":"process_flagged(   df,   interactive = TRUE,   latitude = \"latitude\",   longitude = \"longitude\",   scientific.name = \"scientificName\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/process_flagged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","text":"df Data frame occurrence records returned gators_download(). interactive Default = TRUE. interactive option allows visual display possible problematic points ability manually remove points. Setting interactive = FALSE automatically remove points data frame. latitude Default = \"latitude\". name latitude column data frame. longitude Default = \"longitude\". name longitude column data frame. scientific.name Default = \"scientificName\". name scientificName column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/process_flagged.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","text":"Return cleaned data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/process_flagged.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","text":"interactive option plots flagged points red non-flagged points green. function requires packages CoordinateCleaner, leaflet, magrittr. function requires interactive user input.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/process_flagged.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locality Cleaning - Find possibly problematic occurrence records — process_flagged","text":"","code":"# \\donttest{ cleaned_data <- process_flagged(data, interactive = FALSE) #> Testing coordinate validity #> Flagged 0 records. #> Testing equal lat/lon #> Flagged 0 records. #> Testing zero coordinates #> Flagged 0 records. #> Testing country capitals #> Flagged 0 records. #> Testing country centroids #> Flagged 0 records. #> Testing sea coordinates #> Flagged 0 records. #> Testing geographic outliers #> Testing GBIF headquarters, flagging records around Copenhagen #> Flagged 0 records. #> Testing biodiversity institutions #> Flagged 0 records. #> Flagged 0 of 8 records, EQ = 0. # }"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","title":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","text":"remove_duplicates() function removes records identical event dates occurrence IDs. Prior utilizing function, longitude latitude columns rounded match coordinate uncertainty using basic_locality_clean() function.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","text":"","code":"remove_duplicates(   df,   event.date = \"eventDate\",   aggregator = \"aggregator\",   id = \"ID\",   occ.id = \"occurrenceID\",   year = \"year\",   month = \"month\",   day = \"day\",   latitude = \"latitude\",   longitude = \"longitude\",   remove.NA.occ.id = FALSE,   remove.NA.date = FALSE,   remove.unparseable = FALSE )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","text":"df Data frame occurrence records returned gators_download(). event.date Default = \"eventDate\". name event date column data frame. aggregator Default = \"aggregator\". name column data frame identifies aggregator provided record. equal iDigBio GBIF. id Default = \"ID\". name id column data frame, contains unique IDs defined GBIF (keys) iDigBio (UUID). occ.id Default = \"occurrenceID\". name occurrenceID column data frame. year Default = \"year\". name year column data frame. month Default = \"month\". name month column data frame. day Default = \"day\". name day column data frame. latitude Default = \"latitude\". name latitude column data frame. longitude Default = \"longitude\". name longitude column data frame. remove.NA.occ.id Default = FALSE. remove records missing occurrence IDs set TRUE. remove.NA.date Default = FALSE. remove records missing event dates set TRUE. remove.unparseable Default = FALSE. parse event date individual year, month, day categories user can manually specify. Otherwise, set TRUE, rows simply removed.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","text":"Return data frame duplicates removed.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","text":"identify remove (1) specimen duplicates (2) aggregator duplicates based specimens coordinates, occurrenceID, eventDate. leverage date information available, set remove.unparseable = FALSE manually populate year, month, day columnsl. Dates parsed based ISO 8601 includes time since Unix epoch, January 1st, 1970, therefore dates occur 1970 automatically parsed.  unable parse included date particular records, users can choose manually enter year, month, day records prompted. user chooses manually enter event date, records eventDate printed user asked manually enter year, month, day eventDate console. Users prompted manually parse event dates records year, month, day absent, eventDate present parsed. function also also confirm ID (UUID key) unique remove within-aggregator duplicates may accumulate due processing errors. function requires parsedate dplyr packages. Warning, function ignore missing occurrence ID year, month, day columns provided data set.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Duplicates - Remove records with identical event dates and coordinates — remove_duplicates","text":"","code":"cleaned_data <- remove_duplicates(data) cleaned_data <- remove_duplicates(data, remove.NA.occ.id = TRUE, remove.NA.date = TRUE) cleaned_data <- remove_duplicates(data, remove.unparseable = TRUE)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","title":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","text":"remove_missing() function identifies removes records identified need_to_georeference() needed_records() functions. function utilized prior merging georeferenced retrieved records.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","text":"","code":"remove_missing(   df,   remove.type = \"both\",   info.withheld = \"informationWithheld\",   longitude = \"longitude\",   latitude = \"latitude\",   locality = \"locality\",   id = \"ID\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","text":"df data frame downloaded gators_download(). remove.type Default equal \"\" indicating records identified need_to_georeference() function needed_records() function removed data frame. equal \"georeference\" records identified need_to_georeference() function removed. equal \"withheld\" records identified needed_records() function removed. info.withheld Default = \"informationWithheld\". name information withheld column data frame. longitude Default = \"longitude\". name longitude column data frame. latitude Default = \"latitude\". name latitude column data frame. locality Default = \"locality\". name locality column data frame. id Default = \"ID\". name id column data frame, contains unique IDs defined GBIF (keys) iDigBio (UUID).","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","text":"data frame records containing missing information removed.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Missing Information - Prepare to merge a data frame with georeferenced and retrieved records — remove_missing","text":"","code":"cleaned_data <- remove_missing(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_redacted.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","title":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","text":"remove_redacted() function identifies removes records 'aggregator' equal iDigBio GBIF.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_redacted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","text":"","code":"remove_redacted(df, aggregator = \"aggregator\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_redacted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","text":"df data frame downloaded gators_download(). aggregator Default = \"aggregator\". name column data frame identifies aggregator provided record. equal iDigBio GBIF.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_redacted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","text":"data frame redacted records removed.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_redacted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_redacted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Redacted Information - Remove protected or private records prior to publication — remove_redacted","text":"","code":"cleaned_data <- remove_redacted(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_skewed.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","title":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","text":"remove_skewed() function identifies removes records locality skewed. Records considered skewed informationWithheld contains string \"Coordinate uncertainty increased\".","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_skewed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","text":"","code":"remove_skewed(df, info.withheld = \"informationWithheld\")"},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_skewed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","text":"df data frame downloaded gators_download(). info.withheld Default = \"informationWithheld\". name information withheld column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_skewed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","text":"data frame records remove records locality skewed.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_skewed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/remove_skewed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in basic_locality_clean() - Removed skewed locality — remove_skewed","text":"","code":"cleaned_data <- remove_skewed(data)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/suppress_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress print statements and messages — suppress_output","title":"Suppress print statements and messages — suppress_output","text":"suppress_output() function suppresses print statements messages function. suppress warnings errors.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/suppress_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress print statements and messages — suppress_output","text":"","code":"suppress_output(input)"},{"path":"https://nataliepatten.github.io/gatoRs/reference/suppress_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress print statements and messages — suppress_output","text":"input","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/suppress_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress print statements and messages — suppress_output","text":"output Output output passed function call.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/suppress_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suppress print statements and messages — suppress_output","text":"function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/taxa_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","title":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","text":"taxa_clean() function filters data frame relevant results, based scientific name given. Filtering can done scripts exact fuzzy match. , controlled approach, function provides interactive filtering providing user prompts. interactive method allows user manually determine whether wish keep results containing certain scientific names.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/taxa_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","text":"","code":"taxa_clean(   df,   synonyms.list,   taxa.filter = \"fuzzy\",   scientific.name = \"scientificName\",   accepted.name = NA )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/taxa_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","text":"df Data frame occurrence records returned gators_download(). synonyms.list list synonyms species. taxa.filter type filter used--either \"exact\", \"fuzzy\", \"interactive\". scientific.name Default = \"scientificName\". name scientificName column data frame. accepted.name accepted scientific name species. provided, additional column added data frame accepted name manual comparison.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/taxa_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","text":"Returns data frame filtered results new column accepted name labeled \"accepted_name\".","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/taxa_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","text":"users select interactive approach, function first print unique scientific names current data set ask user respond console prompts regarding records, , removed based scientific name. filtering, based user-provided taxonomy,  accepted name column can defined optional argument. function relies user-provided taxonomy, utilize taxonomic backbone. Additionally, function requires additional packages.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/taxa_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomic Cleaning - Filter and resolve taxon names — taxa_clean","text":"","code":"cleaned_data <- taxa_clean(data, c(\"Galax urceolata\", \"Galax aphylla\"), taxa.filter = \"exact\") #> Current scientific names:  #> [1] \"Galax urceolata (Poir.) Brummitt\" \"Galax aphylla L.\"                 #> [3] \"Galax urceolata\"                  \"Galax aphylla\"                    #> User selected a(n) exact match. cleaned_data <- taxa_clean(data, c(\"Galax urceolata\", \"Galax aphylla\"), accepted.name = \"Galax urceolata\") #> Current scientific names:  #> [1] \"Galax urceolata (Poir.) Brummitt\" \"Galax aphylla L.\"                 #> [3] \"Galax urceolata\"                  \"Galax aphylla\"                    #> User selected a(n) fuzzy match."},{"path":"https://nataliepatten.github.io/gatoRs/reference/thin_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Correction - Spatially thin records — thin_points","title":"Spatial Correction - Spatially thin records — thin_points","text":"thin_points function returns records based coordinate thinning based minimum nearest neighbor distance approach.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/thin_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Correction - Spatially thin records — thin_points","text":"","code":"thin_points(   df,   accepted.name = NA,   distance = 5,   reps = 100,   latitude = \"latitude\",   longitude = \"longitude\" )"},{"path":"https://nataliepatten.github.io/gatoRs/reference/thin_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Correction - Spatially thin records — thin_points","text":"df Data frame occurrence records. accepted.name Accepted name species. argument required data frame already contains accepted_name column. distance Default = 5. Distance km separate records. reps Default = 100. Number times perform thinning algorithm. latitude Default = \"latitude\". name latitude column data frame. longitude Default = \"longitude\". name longitude column data frame.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/thin_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Correction - Spatially thin records — thin_points","text":"df data frame cleaned data.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/thin_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial Correction - Spatially thin records — thin_points","text":"function wrapper spatial thinning using spThin package (Aiello-Lammens et al., 2015) summary, thinning algorithm provided spThin calculates pairwise distances data points, randomly samples single point points less equal set minimum nearest neighbor distance. process repeated pairwise distances among points fall minimum nearest neighbor distance.","code":""},{"path":"https://nataliepatten.github.io/gatoRs/reference/thin_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Correction - Spatially thin records — thin_points","text":"","code":"thinned_data <- thin_points(data, accepted.name = \"Galax urceolata\")"}]
